// using dp:
class Solution {
public:
    int climbStairs(int n) {
     int dp[n+1];
        dp[0]=0,dp[1]=1;
        if(n==1)
           return 1;
        dp[2]=2;
        for(int i=3;i<=n;i++)
        {
            dp[i]=dp[i-1]+dp[i-2];
        }
        return dp[n];
        
    }
};
//using something like dp solution but no extra space
class Solution {
public:
    int climbStairs(int n) {
     int res1=1,res2=2,ans;
        if(n==1)
           return 1;
        if(n==2)
            return 2;
        for(int i=3;i<=n;i++)
        {
            ans=res1+res2;
            res1=res2;
            res2=ans;
        }
        return ans;
        
    }
};
// another approach: fibonacci series
