//my solution:recursive
class Solution {
public:
    bool istrue(TreeNode* t1,TreeNode* t2)
    {
        if(t1==NULL&&t2==NULL)
            return true;
         if(t1==NULL||t2==NULL)
            return false;
        return t1->val==t2->val&&istrue(t1->left,t2->right)&&istrue(t1->right,t2->left);
        
    }
    bool isSymmetric(TreeNode* root) {
        return istrue(root,root);
        
    }
};
//iterative:
class Solution {
public:
    bool isSymmetric(TreeNode *root) {
        TreeNode *left, *right;
        if (!root)
            return true;
        
        queue<TreeNode*> q1, q2;
        q1.push(root->left);
        q2.push(root->right);
        while (!q1.empty() && !q2.empty()){
            left = q1.front();
            q1.pop();
            right = q2.front();
            q2.pop();
            if (NULL == left && NULL == right)
                continue;
            if (NULL == left || NULL == right)
                return false;
            if (left->val != right->val)
                return false;
            q1.push(left->left);
            q1.push(left->right);
            q2.push(right->right);
            q2.push(right->left);
        }
        return true;
    }
};
