 vector<int> partitionLabels(string S) {
        vector<int> charIdx(26, 0);
        for(int i = 0; i < S.size(); i++){
            charIdx[S[i]-'a'] = i;
        }
        
        vector<int> results;
        
        int maxIdx = -1, lastIdx = 0;
        for(int i = 0; i < S.size(); i++){
            maxIdx = max(maxIdx, charIdx[S[i]-'a']);
            if(i == maxIdx) {
                results.push_back(maxIdx - lastIdx + 1);
                lastIdx = i+1;
            }
        }
        return results;
    }
    
    
    //my quite ugly solution: it works still
    class Solution {
public:
    vector<int> partitionLabels(string s) {
        int count[26];
        memset(count,0,sizeof(count));
        vector<int>ans;
        int n=s.size();
        for(int i=0;i<n;i++)
        {
            count[s[i]-'a']++;
        }
        int i=0,j=0;
        unordered_map<char,int>m;
        while(j<n)
        {
            m[s[j]]++;
        while(m.size()!=0)
        {   m[s[j]]++;
            count[s[j]-'a']-=1;
            if(count[s[j]-'a']==0)
               m.erase(s[j]);
            j++;
        }
           ans.push_back(j-i);
            i=j;
        }
        
        return ans;
    }
};
