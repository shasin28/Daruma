class Solution {
public:
    bool is_palindrome(string s)
    {
        int i=0,j=s.size()-1;
        while(i<j)
        {
            if(s[i]!=s[j])
                return false;
            i++;j--;
        }
        return true;
    }
    void find_all(string s,vector<string>&temp,vector<vector<string>>&result)
    {
        int n=s.size();
        if(n==0)
        {
            result.push_back(temp);
            return;
        }
          for(int i=0;i<n;i++)
        {
            string pre=s.substr(0,i+1);
            if(is_palindrome(pre))
            {
                temp.push_back(pre);
                find_all(s.substr(i+1,n-i),temp,result);
                temp.pop_back();
                
            }
        }
      
        
    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>>result;
        vector<string>temp;
        int n=s.size();
        find_all(s,temp,result);
        
        return result;
    }
};
