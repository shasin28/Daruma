class Solution {
public:
  void recur(vector<int>& candidates,int start,int target, vector<vector<int>>&result,vector<int>temp)
    {
        if(target==0)
        {
            result.push_back(temp);
            return;
        }
        for(int i=start;i<candidates.size();i++)
        {
            if(candidates[i]>target)
                return;
           if(i&&candidates[i]==candidates[i-1]&&i>start)//NOte: You were missing i>start in your solution -take care
               continue;
             temp.push_back(candidates[i]);
                
                recur(candidates,i+1,target-candidates[i],result,temp);
                temp.pop_back();
            
        }
        
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<vector<int>>result;
        vector<int>temp;
        sort(begin(candidates),end(candidates));
        recur(candidates,0,target,result,temp);
        return result;
        
    }
};
