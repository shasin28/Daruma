class Solution {
public:
    void dfs(vector<vector<char>>& grid,vector<vector<bool>>&vis,int m,int n,int i,int j)
    {
        if(i>=m||i<0||j<0||j>=n||vis[i][j]||grid[i][j]=='0')
            return;
        vis[i][j]=true;
        dfs(grid,vis,m,n,i+1,j);
        dfs(grid,vis,m,n,i-1,j);
        dfs(grid,vis,m,n,i,j+1);
        dfs(grid,vis,m,n,i,j-1);
        return;
    }
    int numIslands(vector<vector<char>>& grid) {
        int m=grid.size();
        int n=grid[0].size();
        vector<vector<bool>>vis(m,vector<bool>(n,false));
        int c=0;
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(!vis[i][j]&&grid[i][j]=='1')
                {
                    c++;
                    dfs(grid,vis,m,n,i,j);
                }
            }
        }
        return c;
    }
};
